{"version":3,"sources":["NavigationBar.js","Home.js","Plants.js","FindPlants.js","app_component/form.component.jsx","app_component/weather.component.jsx","Suggestions.js","Feedback.js","AboutUs.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","state","activePath","props","location","pathname","onItemClick","path","setState","this","Navbar","collapseOnSelect","expand","bg","variant","Nav","Brand","Link","as","onClick","to","Toggle","aria-controls","Collapse","id","className","eventKey","href","active","Component","withRouter","Home","title","target","PureComponent","Plants","FindPlants","error","role","cityerror","Form","onSubmit","loadweather","type","placeholder","name","autoComplete","Weather","cityname","weatherIcon","temp_celsius","min","max","maxminTemp","temp_min","temp_max","description","charAt","toUpperCase","slice","Suggestions","getWeather","e","a","preventDefault","city","elements","value","fetch","api_call","json","response","console","log","cod","sys","country","main","weather","celsius","calCelsius","temp","get_WeatherIcon","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","Math","floor","React","Feedback","isRedirect","schema","yup","fullName","required","Email","email","Contact","matches","window","validationSchema","values","alert","initialValues","handleSubmit","handleChange","handleBlur","touched","errors","noValidate","Group","controlId","Label","Control","onChange","onBlur","isInvalid","InputGroup","Prepend","Text","aria-describedby","rows","Button","AboutUs","App","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db55d9eb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nclass NavigationBar extends Component {\r\n\r\n    state = {\r\n        activePath: this.props.location.pathname,\r\n    }\r\n\r\n    onItemClick = (path) => {\r\n        this.setState({ activePath: path });\r\n    }\r\n\r\n    render() {\r\n        const { activePath } = this.state;\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n                <Nav>\r\n                    <Navbar.Brand>\r\n                        <Nav.Link as={Link} onClick={() => this.onItemClick(\"/Home\")} to=\"/Home\">Plant Project</Nav.Link>\r\n                    </Navbar.Brand>\r\n                </Nav>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"ml-auto mr-4\">\r\n                        <Nav.Link eventKey={1} as={Link} href=\"/Home\" active={'/Home' === activePath} onClick={() => this.onItemClick('/Home')} to=\"/Home\">Home</Nav.Link>\r\n                        <Nav.Link eventKey={2} as={Link} active={'/Plants' === activePath} onClick={() => this.onItemClick('/Plants')} to=\"/Plants\">Plants</Nav.Link>\r\n                        <Nav.Link eventKey={3} as={Link} active={'/FindPlants' === activePath} onClick={() => this.onItemClick('/FindPlants')} to=\"/FindPlants\">Find Plants</Nav.Link>\r\n                        <Nav.Link eventKey={5} as={Link} active={'/Suggestions' === activePath} onClick={() => this.onItemClick('/Suggestions')} to='/Suggestions'>Suggestions</Nav.Link>\r\n                        <Nav.Link eventKey={6} as={Link} active={'/Feedback' === activePath} onClick={() => this.onItemClick('/Feedback')} to='/Feedback' > Feedback</Nav.Link>\r\n                        <Nav.Link eventKey={6} as={Link} active={'/AboutUs' === activePath} onClick={() => this.onItemClick('/AboutUs')} to='/AboutUs' > AboutUs</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavigationBar);","import React, { PureComponent } from 'react';\r\n\r\nexport default class Home extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"App container\">\r\n                <div className=\"blocks\">\r\n                    <h1>App Promotion</h1>\r\n                </div>\r\n                <div className=\"blocks\">\r\n                    <h1>About the Project</h1>\r\n                </div>\r\n                <div className=\"blocks text-center text-light\">\r\n                    <h4>Created by</h4>\r\n                    <h1>Deepak Kapoor</h1>\r\n                    <h6>9646445151</h6><br />\r\n                    <ul className=\"contact\">\r\n                        <li>\r\n                            <a href=\"mailto:nk93555@gmail.com\" title=\"Email Me\" target=\"__blank\">\r\n                                <i className=\"fa fa-envelope fa-2x\"></i>&emsp;</a>\r\n                            <a href=\"https://www.facebook.com/deepak.kapoor.1905\" title=\"Facebook\" target=\"__blank\">\r\n                                <i className=\"fa fa-facebook-square fa-2x\"></i>&emsp;</a>\r\n                            <a href=\"https://www.instagram.com/deepak._kapoor/\" title=\"Instagram\" target=\"__blank\">\r\n                                <i className=\"fa fa-instagram fa-2x\"></i>&emsp;</a>\r\n                            <a href=\"https://www.youtube.com/channel/UCw_0N6rXyzcH-gpYsPA1Q9Q?view_as=subscriber\" title=\"Youtube\" target=\"__blank\">\r\n                                <i className=\"fa fa-youtube fa-2x\"></i></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\n\r\nexport default class Plants extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"App container\">\r\n                <div className=\"block\">\r\n                    <h1>Plants Details</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\n\r\nexport default class FindPlants extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"App container\">\r\n                <div className=\"block\">\r\n                    <h1>Sorting of Plants</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\nimport \"./form.style.css\";\n\nconst Form = props => {\n  return (\n    <div className=\"container h-100\">\n      <form onSubmit={props.loadweather}>\n        <div>{props.error ? error() : \"\"}</div>\n        <div>{props.cityerror ? cityerror() : \"\"}</div>\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-2\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your City\"\n              name=\"city\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"col-md-3 mt-md-0 mt-2 text-md-left \">\n            <button className=\"btn btn-warning\">Get Weather</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst error = props => {\n  return (\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">\n      Please Enter Valid City Name\n    </div>\n  );\n};\nconst cityerror = props => {\n  return (\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">\n      Sorry!!! This City name is not in our list!!! Try to enter nearby city names\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./weather.style.css\";\n\nconst Weather = props => {\n  return (\n    <div className=\"container text-light\">\n      <h1 className=\"text-white py-3\">{props.cityname}</h1>\n      <h5 className=\"py-4\">\n        <i className={`wi ${props.weatherIcon} display-1`} />\n      </h5>\n\n      {/* Get Celsius */}\n      {props.temp_celsius ? (\n        <h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>\n      ) : null}\n\n      {/* show max and min temp */}\n      {maxminTemp(props.temp_min, props.temp_max)}\n\n      {/* Weather description */}\n      <h4 className=\"py-3\">\n        {props.description.charAt(0).toUpperCase() +\n          props.description.slice(1)}\n      </h4>\n    </div>\n\n  );\n};\n\nexport default Weather;\n\nfunction maxminTemp(min, max) {\n  if (max && min) {\n    return (\n      <h3>\n        <span className=\"px-4\">Min {min}&deg;</span>\n        <span className=\"px-4\">Max {max}&deg;</span>\n      </h3>\n    );\n  }\n}\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Form from \"./app_component/form.component\";\r\nimport Weather from \"./app_component/weather.component\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// git project https://github.com/erikflowers/weather-icons\r\nimport \"weather-icons/css/weather-icons.css\";\r\n\r\nconst Api_Key = \"379d446ca9b0b89463f45a7e6bc4a1fe\";\r\n\r\nclass Suggestions extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            city: undefined,\r\n            country: undefined,\r\n            icon: undefined,\r\n            main: undefined,\r\n            celsius: undefined,\r\n            temp_max: null,\r\n            temp_min: null,\r\n            description: \"\",\r\n            error: false,\r\n            cityerror: false\r\n        };\r\n\r\n        this.weatherIcon = {\r\n            Thunderstorm: \"wi-thunderstorm\",\r\n            Drizzle: \"wi-sleet\",\r\n            Rain: \"wi-storm-showers\",\r\n            Snow: \"wi-snow\",\r\n            Atmosphere: \"wi-fog\",\r\n            Clear: \"wi-day-sunny\",\r\n            Clouds: \"wi-day-fog\"\r\n        };\r\n    }\r\n\r\n    get_WeatherIcon(icons, rangeId) {\r\n        switch (true) {\r\n            case rangeId >= 200 && rangeId < 232:\r\n                this.setState({ icon: icons.Thunderstorm });\r\n                break;\r\n            case rangeId >= 300 && rangeId <= 321:\r\n                this.setState({ icon: icons.Drizzle });\r\n                break;\r\n            case rangeId >= 500 && rangeId <= 521:\r\n                this.setState({ icon: icons.Rain });\r\n                break;\r\n            case rangeId >= 600 && rangeId <= 622:\r\n                this.setState({ icon: icons.Snow });\r\n                break;\r\n            case rangeId >= 701 && rangeId <= 781:\r\n                this.setState({ icon: icons.Atmosphere });\r\n                break;\r\n            case rangeId === 800:\r\n                this.setState({ icon: icons.Clear });\r\n                break;\r\n            case rangeId >= 801 && rangeId <= 804:\r\n                this.setState({ icon: icons.Clouds });\r\n                break;\r\n            default:\r\n                this.setState({ icon: icons.Clouds });\r\n        }\r\n    }\r\n\r\n    calCelsius(temp) {\r\n        let cell = Math.floor(temp - 273.15);\r\n        return cell;\r\n    }\r\n\r\n    getWeather = async e => {\r\n        e.preventDefault();\r\n\r\n        const city = e.target.elements.city.value;\r\n        // api.openweathermap.org/data/2.5/weather?q=${city},\"\",8165&appid=${Api_Key}\r\n        // api.openweathermap.org / data / 2.5 / weather ? q = { city name } & appid={ your api key }\r\n\r\n\r\n\r\n        if (city) {\r\n            const api_call = await fetch(\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${Api_Key}`\r\n            );\r\n\r\n            const response = await api_call.json();\r\n            console.log(response);\r\n            if (response.cod !== \"404\") {\r\n                this.setState({\r\n                    city: `${response.name}, ${response.sys.country}`,\r\n                    main: response.weather[0].main,\r\n                    celsius: this.calCelsius(response.main.temp),\r\n                    temp_max: this.calCelsius(response.main.temp_max),\r\n                    temp_min: this.calCelsius(response.main.temp_min),\r\n                    description: response.weather[0].description,\r\n                    error: false,\r\n                    cityerror: false\r\n                });\r\n\r\n                // seting icons\r\n                this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\r\n\r\n                console.log(response);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    cityerror: true,\r\n                    error: false\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                error: true,\r\n                cityerror: false\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Form loadweather={this.getWeather} error={this.state.error} cityerror={this.state.cityerror} />\r\n                <Weather\r\n                    cityname={this.state.city}\r\n                    weatherIcon={this.state.icon}\r\n                    temp_celsius={this.state.celsius}\r\n                    temp_max={this.state.temp_max}\r\n                    temp_min={this.state.temp_min}\r\n                    description={this.state.description}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Suggestions;","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { Form, InputGroup, Button, } from 'react-bootstrap'\r\n\r\nexport default class Feedback extends Component {\r\n    state = {\r\n        isRedirect: false,\r\n    }\r\n\r\n    render() {\r\n\r\n        var phoneNum = /^\\s*(?:\\+?(\\d{1,3}))?[- (]*(\\d{3})[- )]*(\\d{3})[- ]*(\\d{4})(?: *[x/#]{1}(\\d+))?\\s*$/\r\n        const schema = yup.object({\r\n            fullName: yup.string().required(\"Please Enter Name\"),\r\n            Email: yup.string().email().required(),\r\n            Contact: yup.string().required(\"Please Enter Valid Phone Number\").matches(phoneNum, 'Phone number is not valid')\r\n                .max(10, \"Maximum 10 digits allowed\"),\r\n            Feedback: yup.string().required(\"Feedback can't be empty field\")\r\n        });\r\n\r\n        const isRedirect = this.state.isRedirect;\r\n        if (isRedirect === true) {\r\n            window.location = '/PlantProject'\r\n        }\r\n        return (\r\n            <div className=\"mb-4\">\r\n                <div className=\"text-center text-light my-4\">\r\n                    <h1>Your Feedback is very important for us</h1>\r\n                    <p>Please enter following details so that we can make ourself better</p>\r\n                </div>\r\n                <Formik\r\n                    validationSchema={schema}\r\n                    onSubmit={(values) => {\r\n                        alert(\"Thank You for giving your valuable feedback. Enjoy your day\");\r\n\r\n                        this.setState({\r\n                            isRedirect: true\r\n                        })\r\n                    }\r\n                    }\r\n                    initialValues={{\r\n                        fullName: \"\",\r\n                        Email: \"\",\r\n                        Contact: \"\",\r\n                        Feedback: \"\"\r\n                    }}\r\n                >\r\n                    {({\r\n                        handleSubmit,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                    }) => (\r\n                            <Form noValidate onSubmit={handleSubmit} className=\"container col-md-4\">\r\n                                <Form.Group controlId=\"inputname\">\r\n                                    <Form.Label>Full name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"fullName\"\r\n                                        placeholder=\"Enter Full Name\"\r\n                                        value={values.fullName}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        isInvalid={touched.fullName && errors.fullName}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.fullName}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"inputemail\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            name=\"Email\"\r\n                                            value={values.Email}\r\n                                            onBlur={handleBlur}\r\n                                            onChange={handleChange}\r\n                                            isInvalid={touched.Email && errors.Email}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.Email}\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"inputcontact\">\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        placeholder=\"Don't Include +91\"\r\n                                        name=\"Contact\"\r\n                                        value={values.Contact}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        isInvalid={touched.Contact && errors.Contact}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.Contact}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"inputfeedback\">\r\n                                    <Form.Label>Your Suggestions or Complaints</Form.Label><br />\r\n                                    <Form.Control\r\n                                        as=\"textarea\"\r\n                                        rows=\"4\"\r\n                                        placeholder=\"Type Here\"\r\n                                        name=\"Feedback\"\r\n                                        value={values.Feedback}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        isInvalid={touched.Feedback && errors.Feedback}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.Feedback}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n\r\n                                <Button type=\"submit\" className=\"d-flex mx-auto\">Submit Feedback</Button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AboutUs extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mydiv text-center text-light\">\r\n                <h4>Created by</h4>\r\n                <h1>Deepak Kapoor</h1>\r\n                <h6>9646445151</h6><br />\r\n                <ul className=\"contact\">\r\n                    <li>\r\n                        <a href=\"mailto:nk93555@gmail.com\" title=\"Email Me\" target=\"__blank\">\r\n                            <i className=\"fa fa-envelope fa-2x\"></i>&emsp;</a>\r\n                        <a href=\"https://www.facebook.com/deepak.kapoor.1905\" title=\"Facebook\" target=\"__blank\">\r\n                            <i className=\"fa fa-facebook-square fa-2x\"></i>&emsp;</a>\r\n                        <a href=\"https://www.instagram.com/deepak._kapoor/\" title=\"Instagram\" target=\"__blank\">\r\n                            <i className=\"fa fa-instagram fa-2x\"></i>&emsp;</a>\r\n                        <a href=\"https://www.youtube.com/channel/UCw_0N6rXyzcH-gpYsPA1Q9Q?view_as=subscriber\" title=\"Youtube\" target=\"__blank\">\r\n                            <i className=\"fa fa-youtube fa-2x\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { NavigationBar, Home, Plants, FindPlants, Suggestions, Feedback, AboutUs } from './Components'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'font-awesome/css/font-awesome.min.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <NavigationBar />\n        <Route path='/' exact component={Home} />\n        <Route path='/Home' component={Home} />\n        <Route path='/Plants' component={Plants} />\n        <Route path='/FindPlants' component={FindPlants} />\n        <Route path='/Suggestions' component={Suggestions} />\n        <Route path='/Feedback' component={Feedback} />\n        <Route path='/AboutUs' component={AboutUs} />\n      </Router>\n    )\n  }\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}