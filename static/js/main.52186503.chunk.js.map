{"version":3,"sources":["NavigationBar.js","Home.js","Plants.js","FindPlants.js","app_component/form.component.jsx","app_component/weather.component.jsx","Suggestions.js","Feedback.js","AboutUs.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","state","activePath","props","location","pathname","onItemClick","path","setState","this","Navbar","expand","bg","variant","Nav","Brand","Link","as","onClick","to","Toggle","aria-controls","Collapse","id","className","eventKey","href","active","Component","withRouter","Home","PureComponent","Plants","FindPlants","error","role","cityerror","Form","onSubmit","loadweather","type","placeholder","name","autoComplete","Weather","cityname","weatherIcon","temp_celsius","min","max","maxminTemp","temp_min","temp_max","description","charAt","toUpperCase","slice","Suggestions","getWeather","e","a","preventDefault","city","target","elements","value","fetch","api_call","json","response","console","log","cod","sys","country","main","weather","celsius","calCelsius","temp","get_WeatherIcon","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","Math","floor","React","Feedback","AboutUs","App","exact","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52186503.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nclass NavigationBar extends Component {\r\n\r\n    state = {\r\n        activePath: this.props.location.pathname,\r\n    }\r\n\r\n    onItemClick = (path) => {\r\n        this.setState({ activePath: path });\r\n    }\r\n\r\n    render() {\r\n        const { activePath } = this.state;\r\n        return (\r\n            <Navbar expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n                <Nav>\r\n                    <Navbar.Brand>\r\n                        <Nav.Link as={Link} onClick={() => this.onItemClick(\"/Home\")} to=\"/Home\">DK React App</Nav.Link>\r\n                    </Navbar.Brand>\r\n                </Nav>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"ml-auto mr-4\">\r\n                        <Nav.Link eventKey={1} as={Link} href=\"/Home\" active={'/Home' === activePath} onClick={() => this.onItemClick('/Home')} to=\"/Home\">Home</Nav.Link>\r\n                        <Nav.Link eventKey={2} as={Link} active={'/Plants' === activePath} onClick={() => this.onItemClick('/Plants')} to=\"/Plants\">Plants</Nav.Link>\r\n                        <Nav.Link eventKey={3} as={Link} active={'/FindPlants' === activePath} onClick={() => this.onItemClick('/FindPlants')} to=\"/FindPlants\">Find Plants</Nav.Link>\r\n                        <Nav.Link eventKey={5} as={Link} active={'/Suggestions' === activePath} onClick={() => this.onItemClick('/Suggestions')} to='/Suggestions'>Suggestions</Nav.Link>\r\n                        <Nav.Link eventKey={6} as={Link} active={'/Feedback' === activePath} onClick={() => this.onItemClick('/Feedback')} to='/Feedback' > Feedback</Nav.Link>\r\n                        <Nav.Link eventKey={6} as={Link} active={'/AboutUs' === activePath} onClick={() => this.onItemClick('/AboutUs')} to='/AboutUs' > AboutUs</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavigationBar);","import React, { PureComponent } from 'react';\r\n\r\nexport default class Home extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"App container\">\r\n                <div className=\"block\">\r\n                    <h1>App Promotion</h1>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <h1>About the Project</h1>\r\n                </div>\r\n                <div className=\"block\">\r\n                    <h1>About Us</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\n\r\nexport default class Plants extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"App container\">\r\n                <div className=\"block\">\r\n                    <h1>Plants Details</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\n\r\nexport default class FindPlants extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"App container\">\r\n                <div className=\"block\">\r\n                    <h1>Sorting of Plants</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\nimport \"./form.style.css\";\n\nconst Form = props => {\n  return (\n    <div className=\"container h-100\">\n      <form onSubmit={props.loadweather}>\n        <div>{props.error ? error() : \"\"}</div>\n        <div>{props.cityerror ? cityerror() : \"\"}</div>\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-2\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your City\"\n              name=\"city\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"col-md-3 mt-md-0 mt-2 text-md-left \">\n            <button className=\"btn btn-warning\">Get Weather</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst error = props => {\n  return (\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">\n      Please Enter Valid City Name\n    </div>\n  );\n};\nconst cityerror = props => {\n  return (\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">\n      Sorry!!! This City name is not in our list!!! Try to enter nearby city names\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./weather.style.css\";\n\nconst Weather = props => {\n  return (\n    <div className=\"container text-light\">\n      <h1 className=\"text-white py-3\">{props.cityname}</h1>\n      <h5 className=\"py-4\">\n        <i className={`wi ${props.weatherIcon} display-1`} />\n      </h5>\n\n      {/* Get Celsius */}\n      {props.temp_celsius ? (\n        <h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>\n      ) : null}\n\n      {/* show max and min temp */}\n      {maxminTemp(props.temp_min, props.temp_max)}\n\n      {/* Weather description */}\n      <h4 className=\"py-3\">\n        {props.description.charAt(0).toUpperCase() +\n          props.description.slice(1)}\n      </h4>\n    </div>\n\n  );\n};\n\nexport default Weather;\n\nfunction maxminTemp(min, max) {\n  if (max && min) {\n    return (\n      <h3>\n        <span className=\"px-4\">{min}&deg;</span>\n        <span className=\"px-4\">{max}&deg;</span>\n      </h3>\n    );\n  }\n}\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Form from \"./app_component/form.component\";\r\nimport Weather from \"./app_component/weather.component\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// git project https://github.com/erikflowers/weather-icons\r\nimport \"weather-icons/css/weather-icons.css\";\r\n\r\nconst Api_Key = \"379d446ca9b0b89463f45a7e6bc4a1fe\";\r\n\r\nclass Suggestions extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            city: undefined,\r\n            country: undefined,\r\n            icon: undefined,\r\n            main: undefined,\r\n            celsius: undefined,\r\n            temp_max: null,\r\n            temp_min: null,\r\n            description: \"\",\r\n            error: false,\r\n            cityerror: false\r\n        };\r\n\r\n        this.weatherIcon = {\r\n            Thunderstorm: \"wi-thunderstorm\",\r\n            Drizzle: \"wi-sleet\",\r\n            Rain: \"wi-storm-showers\",\r\n            Snow: \"wi-snow\",\r\n            Atmosphere: \"wi-fog\",\r\n            Clear: \"wi-day-sunny\",\r\n            Clouds: \"wi-day-fog\"\r\n        };\r\n    }\r\n\r\n    get_WeatherIcon(icons, rangeId) {\r\n        switch (true) {\r\n            case rangeId >= 200 && rangeId < 232:\r\n                this.setState({ icon: icons.Thunderstorm });\r\n                break;\r\n            case rangeId >= 300 && rangeId <= 321:\r\n                this.setState({ icon: icons.Drizzle });\r\n                break;\r\n            case rangeId >= 500 && rangeId <= 521:\r\n                this.setState({ icon: icons.Rain });\r\n                break;\r\n            case rangeId >= 600 && rangeId <= 622:\r\n                this.setState({ icon: icons.Snow });\r\n                break;\r\n            case rangeId >= 701 && rangeId <= 781:\r\n                this.setState({ icon: icons.Atmosphere });\r\n                break;\r\n            case rangeId === 800:\r\n                this.setState({ icon: icons.Clear });\r\n                break;\r\n            case rangeId >= 801 && rangeId <= 804:\r\n                this.setState({ icon: icons.Clouds });\r\n                break;\r\n            default:\r\n                this.setState({ icon: icons.Clouds });\r\n        }\r\n    }\r\n\r\n    calCelsius(temp) {\r\n        let cell = Math.floor(temp - 273.15);\r\n        return cell;\r\n    }\r\n\r\n    getWeather = async e => {\r\n        e.preventDefault();\r\n\r\n        const city = e.target.elements.city.value;\r\n        // api.openweathermap.org/data/2.5/weather?q=${city},\"\",8165&appid=${Api_Key}\r\n        // api.openweathermap.org / data / 2.5 / weather ? q = { city name } & appid={ your api key }\r\n\r\n\r\n\r\n        if (city) {\r\n            const api_call = await fetch(\r\n                `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${Api_Key}`\r\n            );\r\n\r\n            const response = await api_call.json();\r\n            console.log(response);\r\n            if (response.cod !== \"404\") {\r\n                this.setState({\r\n                    city: `${response.name}, ${response.sys.country}`,\r\n                    main: response.weather[0].main,\r\n                    celsius: this.calCelsius(response.main.temp),\r\n                    temp_max: this.calCelsius(response.main.temp_max),\r\n                    temp_min: this.calCelsius(response.main.temp_min),\r\n                    description: response.weather[0].description,\r\n                    error: false,\r\n                    cityerror: false\r\n                });\r\n\r\n                // seting icons\r\n                this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\r\n\r\n                console.log(response);\r\n            }\r\n            else {\r\n                this.setState({\r\n                    cityerror: true,\r\n                    error: false\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                error: true,\r\n                cityerror: false\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Form loadweather={this.getWeather} error={this.state.error} cityerror={this.state.cityerror} />\r\n                <Weather\r\n                    cityname={this.state.city}\r\n                    weatherIcon={this.state.icon}\r\n                    temp_celsius={this.state.celsius}\r\n                    temp_max={this.state.temp_max}\r\n                    temp_min={this.state.temp_min}\r\n                    description={this.state.description}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Suggestions;","import React, { PureComponent } from 'react'\r\n\r\nexport default class Feedback extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"App container\">\r\n                <div className=\"block\">\r\n                    <h1>Feedback Form</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\n\r\nexport default class AboutUs extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"App container\">\r\n                <div className=\"block\">\r\n                    <h1>About Us</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { NavigationBar, Home, Plants, FindPlants, Suggestions, Feedback, AboutUs } from './Components'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <NavigationBar />\n        <Route path='/' exact component={Home} />\n        <Route path='/Home' component={Home} />\n        <Route path='/Plants' component={Plants} />\n        <Route path='/FindPlants' component={FindPlants} />\n        <Route path='/Suggestions' component={Suggestions} />\n        <Route path='/Feedback' component={Feedback} />\n        <Route path='/AboutUs' component={AboutUs} />\n      </BrowserRouter>\n    )\n  }\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}